{"version":3,"sources":["../scripts/feed.js"],"names":["window","hermesApp","Feed","dives","newDives","auth","firebase","$","document","ready","pageFeed","feedImageContainer","noDivesMessage","nextPageButton","newDivesButton","click","showNewDives","diveIds","Object","keys","i","length","hide","diveData","dive","Dive","push","diveElement","existingDiveElement","replaceWith","append","addClass","fillDiveData","thumb_url","url","text","author","timestamp","thumb_storage_uri","full_storage_uri","full_url","nextPage","unbind","loadMoreDives","prop","console","log","then","addDives","data","entries","toggleNextPageButton","show","MaterialUtils","onEndScroll","diveKeys","prepend","clear","getDives","latestDiveId","subscribeToGeneralFeed","diveId","diveValue","addNewDive","registerForDivesDeletion","onDiveDeleted","currentUser","updateHomeFeeds","getHomeFeedDives","fadeIn","subscribeToHomeFeed","startHomeFeedLiveUpdaters","nbNewDives","remove","stopOnEndScrolls","cancelAllSubscriptions","forEach","feed"],"mappings":"AAAA,a;;AAEAA,OAAOC,SAAP,GAAmBD,OAAOC,SAAP,IAAoB,EAAvC;;AAEA;;;AAGAA,UAAUC,IAAV;;AAEE;;;;AAIA,oBAAc;AACZ;AACA,SAAKC,KAAL,GAAa,EAAb;AACA;AACA,SAAKC,QAAL,GAAgB,EAAhB;;AAEA;AACA,SAAKC,IAAL,GAAYC,SAASD,IAAT,EAAZ;;AAEAE,MAAEC,QAAF,EAAYC,KAAZ,CAAkB,YAAM;AACtB;AACA,YAAKC,QAAL,GAAgBH,EAAE,YAAF,CAAhB;AACA,YAAKI,kBAAL,GAA0BJ,EAAE,qBAAF,EAAyB,MAAKG,QAA9B,CAA1B;AACA,YAAKE,cAAL,GAAsBL,EAAE,cAAF,EAAkB,MAAKG,QAAvB,CAAtB;AACA,YAAKG,cAAL,GAAsBN,EAAE,6BAAF,CAAtB;AACA,YAAKO,cAAL,GAAsBP,EAAE,6BAAF,CAAtB;;AAEA;AACA,YAAKO,cAAL,CAAoBC,KAApB,CAA0B,oBAAM,MAAKC,YAAL,EAAN,EAA1B;AACD,KAVD;AAWD;;AAED;;OA5BF;AA+BWb,SA/BX,EA+BkB;AACd;AACA,UAAMc,UAAUC,OAAOC,IAAP,CAAYhB,KAAZ,CAAhB;AACA,WAAK,IAAIiB,IAAIH,QAAQI,MAAR,GAAiB,CAA9B,EAAiCD,KAAK,CAAtC,EAAyCA,GAAzC,EAA8C;AAC5C,aAAKR,cAAL,CAAoBU,IAApB;AACA,YAAMC,WAAWpB,MAAMc,QAAQG,CAAR,CAAN,CAAjB;AACA,YAAMI,OAAO,IAAIvB,UAAUwB,IAAd,CAAmBR,QAAQG,CAAR,CAAnB,CAAb;AACA,aAAKjB,KAAL,CAAWuB,IAAX,CAAgBF,IAAhB;AACA,YAAMG,cAAcH,KAAKG,WAAzB;AACA;AACA,YAAMC,sBAAsBrB,gBAAcU,QAAQG,CAAR,CAAd,EAA4B,KAAKT,kBAAjC,CAA5B;AACA,YAAIiB,oBAAoBP,MAAxB,EAAgC;AAC9BO,8BAAoBC,WAApB,CAAgCF,WAAhC;AACD,SAFD,MAEO;AACL,eAAKhB,kBAAL,CAAwBmB,MAAxB,CAA+BH,YAAYI,QAAZ,cAAgCd,QAAQG,CAAR,CAAhC,CAA/B;AACD;AACDI,aAAKQ,YAAL,CAAkBf,QAAQG,CAAR,CAAlB,EAA8BG,SAASU,SAAT,IAAsBV,SAASW,GAA7D;AACEX,iBAASY,IADX,EACiBZ,SAASa,MAD1B,EACkCb,SAASc,SAD3C,EACsDd,SAASe,iBAD/D;AAEEf,iBAASgB,gBAFX,EAE6BhB,SAASiB,QAFtC;AAGD;AACF;;AAED;;;SArDF;AAyDuBC,YAzDvB,EAyDiC;AAC7B,WAAK5B,cAAL,CAAoB6B,MAApB,CAA2B,OAA3B;AACA,UAAID,QAAJ,EAAc;AACZ,YAAME,gBAAgB,SAAhBA,aAAgB,GAAM;AAC1B,iBAAK9B,cAAL,CAAoB+B,IAApB,CAAyB,UAAzB,EAAqC,IAArC;AACAC,kBAAQC,GAAR,CAAY,6BAAZ;AACAL,qBAAWM,IAAX,CAAgB,gBAAQ;AACtB,mBAAKC,QAAL,CAAcC,KAAKC,OAAnB;AACA,mBAAKC,oBAAL,CAA0BF,KAAKR,QAA/B;AACD,WAHD;AAID,SAPD;AAQA,aAAK5B,cAAL,CAAoBuC,IAApB;AACA;AACAnD,kBAAUoD,aAAV,CAAwBC,WAAxB,CAAoC,GAApC,EAAyCP,IAAzC,CAA8CJ,aAA9C;AACA,aAAK9B,cAAL,CAAoB+B,IAApB,CAAyB,UAAzB,EAAqC,KAArC;AACA,aAAK/B,cAAL,CAAoBE,KAApB,CAA0B4B,aAA1B;AACD,OAdD,MAcO;AACL,aAAK9B,cAAL,CAAoBS,IAApB;AACD;AACF;;AAED;;;SA9EF;AAkFiB;AACb,UAAMlB,WAAW,KAAKA,QAAtB;AACA,WAAKA,QAAL,GAAgB,EAAhB;AACA,WAAKU,cAAL,CAAoBQ,IAApB;AACA,UAAMiC,WAAWrC,OAAOC,IAAP,CAAYf,QAAZ,CAAjB;;AAEA,WAAK,IAAIgB,IAAI,CAAb,EAAgBA,IAAImC,SAASlC,MAA7B,EAAqCD,GAArC,EAA0C;AACxC,aAAKR,cAAL,CAAoBU,IAApB;AACA,YAAME,OAAOpB,SAASmD,SAASnC,CAAT,CAAT,CAAb;AACA,YAAMO,cAAc,IAAI1B,UAAUwB,IAAd,CAAmB8B,SAASnC,CAAT,CAAnB,CAApB;AACA,aAAKjB,KAAL,CAAWuB,IAAX,CAAgBC,WAAhB;AACA,aAAKhB,kBAAL,CAAwB6C,OAAxB,CAAgC7B,YAAYA,WAA5C;AACAA,oBAAYK,YAAZ,CAAyBuB,SAASnC,CAAT,CAAzB,EAAsCI,KAAKS,SAAL;AAClCT,aAAKU,GADT,EACcV,KAAKW,IADnB,EACyBX,KAAKY,MAD9B,EACsCZ,KAAKa,SAD3C,EACsD,IADtD,EAC4D,IAD5D,EACkEb,KAAKgB,QADvE;AAED;AACF;;AAED;;SAnGF;AAsGoB;AAChB;AACA,WAAKiB,KAAL;;AAEA;AACAxD,gBAAUK,QAAV,CAAmBoD,QAAnB,GAA8BX,IAA9B,CAAmC,gBAAQ;AACzC;AACA,YAAMY,eAAezC,OAAOC,IAAP,CAAY8B,KAAKC,OAAjB,EAA0BhC,OAAOC,IAAP,CAAY8B,KAAKC,OAAjB,EAA0B7B,MAA1B,GAAmC,CAA7D,CAArB;AACApB,kBAAUK,QAAV,CAAmBsD,sBAAnB;AACI,kBAACC,MAAD,EAASC,SAAT,UAAuB,OAAKC,UAAL,CAAgBF,MAAhB,EAAwBC,SAAxB,CAAvB,EADJ,EAC+DH,YAD/D;;AAGA;AACA,eAAKX,QAAL,CAAcC,KAAKC,OAAnB;AACA,eAAKC,oBAAL,CAA0BF,KAAKR,QAA/B;AACD,OATD;;AAWA;AACAxC,gBAAUK,QAAV,CAAmB0D,wBAAnB,CAA4C,0BAAU,OAAKC,aAAL,CAAmBJ,MAAnB,CAAV,EAA5C;AACD;;AAED;;SA1HF;AA6HiB;AACb;AACA,WAAKJ,KAAL;;AAEA,UAAI,KAAKpD,IAAL,CAAU6D,WAAd,EAA2B;AACzB;AACAjE,kBAAUK,QAAV,CAAmB6D,eAAnB,GAAqCpB,IAArC,CAA0C,YAAM;AAC9C;AACA9C,oBAAUK,QAAV,CAAmB8D,gBAAnB,GAAsCrB,IAAtC,CAA2C,gBAAQ;AACjD,gBAAM9B,UAAUC,OAAOC,IAAP,CAAY8B,KAAKC,OAAjB,CAAhB;AACA,gBAAIjC,QAAQI,MAAR,KAAmB,CAAvB,EAA0B;AACxB,qBAAKT,cAAL,CAAoByD,MAApB;AACD;AACD;AACA,gBAAMV,eAAe1C,QAAQA,QAAQI,MAAR,GAAiB,CAAzB,CAArB;AACApB,sBAAUK,QAAV,CAAmBgE,mBAAnB;AACI,sBAACT,MAAD,EAASC,SAAT,EAAuB;AACrB,qBAAKC,UAAL,CAAgBF,MAAhB,EAAwBC,SAAxB;AACD,aAHL,EAGOH,YAHP;;AAKA;AACA,mBAAKX,QAAL,CAAcC,KAAKC,OAAnB;AACA,mBAAKC,oBAAL,CAA0BF,KAAKR,QAA/B;AACD,WAfD;;AAiBA;AACAxC,oBAAUK,QAAV,CAAmBiE,yBAAnB;;AAEA;AACAtE,oBAAUK,QAAV,CAAmB0D,wBAAnB,CAA4C,0BAAU,OAAKC,aAAL,CAAmBJ,MAAnB,CAAV,EAA5C;AACD,SAxBD;AAyBD;AACF;;AAED;;SA/JF;AAkKgBA,UAlKhB,EAkKwB;AACpB;AACA,UAAI,KAAKzD,QAAL,CAAcyD,MAAd,CAAJ,EAA2B;AACzB,eAAO,KAAKzD,QAAL,CAAcyD,MAAd,CAAP;AACA,YAAMW,aAAatD,OAAOC,IAAP,CAAY,KAAKf,QAAjB,EAA2BiB,MAA9C;AACA,aAAKP,cAAL,CAAoBqB,IAApB,cAAoCqC,UAApC;AACA,YAAIA,eAAe,CAAnB,EAAsB;AACpB,eAAK1D,cAAL,CAAoBQ,IAApB;AACD;AACF;;AAED;AACAf,sBAAcsD,MAAd,EAAwB,KAAKnD,QAA7B,EAAuC+D,MAAvC;AACD;;AAED;;SAjLF;AAoLaZ,UApLb,EAoLqBC,SApLrB,EAoLgC;AAC5B,WAAK1D,QAAL,CAAcyD,MAAd,IAAwBC,SAAxB;AACA,WAAKhD,cAAL,CAAoBqB,IAApB,cAAoCjB,OAAOC,IAAP,CAAY,KAAKf,QAAjB,EAA2BiB,MAA/D;AACA,WAAKP,cAAL,CAAoBsC,IAApB;AACD;;AAED;;SA1LF;AA6LU;AACN;AACA7C,QAAE,UAAF,EAAc,KAAKI,kBAAnB,EAAuC8D,MAAvC;;AAEA;AACA,WAAK5D,cAAL,CAAoBS,IAApB;AACA,WAAKR,cAAL,CAAoBQ,IAApB;;AAEA;AACA,WAAKT,cAAL,CAAoB6B,MAApB,CAA2B,OAA3B;;AAEA;AACAzC,gBAAUoD,aAAV,CAAwBqB,gBAAxB;;AAEA;AACA,WAAKtE,QAAL,GAAgB,EAAhB;;AAEA;AACA,WAAKQ,cAAL,CAAoBU,IAApB;;AAEA;AACArB,gBAAUK,QAAV,CAAmBqE,sBAAnB;;AAEA;AACA,WAAKxE,KAAL,CAAWyE,OAAX,CAAmB,wBAAQpD,KAAKiC,KAAL,EAAR,EAAnB;AACA,WAAKtD,KAAL,GAAa,EAAb;AACD,KAvNH;;;AA0NAF,UAAU4E,IAAV,GAAiB,IAAI5E,UAAUC,IAAd,EAAjB","file":"feed.js","sourcesContent":["'use strict';\n\nwindow.hermesApp = window.hermesApp || {};\n\n/**\n * Handles the Home and Feed UI.\n */\nhermesApp.Feed = class {\n\n  /**\n   * Initializes the Friendly Pix feeds.\n   * @constructor\n   */\n  constructor() {\n    // List of all dives on the page.\n    this.dives = [];\n    // Map of dives that can be displayed.\n    this.newDives = {};\n\n    // Firebase SDK.\n    this.auth = firebase.auth();\n\n    $(document).ready(() => {\n      // Pointers to DOM elements.\n      this.pageFeed = $('#page-feed');\n      this.feedImageContainer = $('.hm-image-container', this.pageFeed);\n      this.noDivesMessage = $('.hm-no-dives', this.pageFeed);\n      this.nextPageButton = $('.hm-next-page-button button');\n      this.newDivesButton = $('.hm-new-dives-button button');\n\n      // Event bindings.\n      this.newDivesButton.click(() => this.showNewDives());\n    });\n  }\n\n  /**\n   * Appends the given list of `dives`.\n   */\n  addDives(dives) {\n    // Displays the list of dives\n    const diveIds = Object.keys(dives);\n    for (let i = diveIds.length - 1; i >= 0; i--) {\n      this.noDivesMessage.hide();\n      const diveData = dives[diveIds[i]];\n      const dive = new hermesApp.Dive(diveIds[i]);\n      this.dives.push(dive);\n      const diveElement = dive.diveElement;\n      // If a dive with similar ID is already in the feed we replace it instead of appending.\n      const existingDiveElement = $(`.hm-dive-${diveIds[i]}`, this.feedImageContainer);\n      if (existingDiveElement.length) {\n        existingDiveElement.replaceWith(diveElement);\n      } else {\n        this.feedImageContainer.append(diveElement.addClass(`hm-dive-${diveIds[i]}`));\n      }\n      dive.fillDiveData(diveIds[i], diveData.thumb_url || diveData.url,\n        diveData.text, diveData.author, diveData.timestamp, diveData.thumb_storage_uri,\n        diveData.full_storage_uri, diveData.full_url);\n    }\n  }\n\n  /**\n   * Shows the \"load next page\" button and binds it the `nextPage` callback. If `nextPage` is `null`\n   * then the button is hidden.\n   */\n  toggleNextPageButton(nextPage) {\n    this.nextPageButton.unbind('click');\n    if (nextPage) {\n      const loadMoreDives = () => {\n        this.nextPageButton.prop('disabled', true);\n        console.log('Loading next page of dives.');\n        nextPage().then(data => {\n          this.addDives(data.entries);\n          this.toggleNextPageButton(data.nextPage);\n        });\n      };\n      this.nextPageButton.show();\n      // Enable infinite Scroll.\n      hermesApp.MaterialUtils.onEndScroll(100).then(loadMoreDives);\n      this.nextPageButton.prop('disabled', false);\n      this.nextPageButton.click(loadMoreDives);\n    } else {\n      this.nextPageButton.hide();\n    }\n  }\n\n  /**\n   * Prepends the list of new dives stored in `this.newDives`. This happens when the user clicks on\n   * the \"Show new dives\" button.\n   */\n  showNewDives() {\n    const newDives = this.newDives;\n    this.newDives = {};\n    this.newDivesButton.hide();\n    const diveKeys = Object.keys(newDives);\n\n    for (let i = 0; i < diveKeys.length; i++) {\n      this.noDivesMessage.hide();\n      const dive = newDives[diveKeys[i]];\n      const diveElement = new hermesApp.Dive(diveKeys[i]);\n      this.dives.push(diveElement);\n      this.feedImageContainer.prepend(diveElement.diveElement);\n      diveElement.fillDiveData(diveKeys[i], dive.thumb_url ||\n          dive.url, dive.text, dive.author, dive.timestamp, null, null, dive.full_url);\n    }\n  }\n\n  /**\n   * Displays the general dives feed.\n   */\n  showGeneralFeed() {\n    // Clear previously displayed dives if any.\n    this.clear();\n\n    // Load initial batch of dives.\n    hermesApp.firebase.getDives().then(data => {\n      // Listen for new dives.\n      const latestDiveId = Object.keys(data.entries)[Object.keys(data.entries).length - 1];\n      hermesApp.firebase.subscribeToGeneralFeed(\n          (diveId, diveValue) => this.addNewDive(diveId, diveValue), latestDiveId);\n\n      // Adds fetched dives and next page button if necessary.\n      this.addDives(data.entries);\n      this.toggleNextPageButton(data.nextPage);\n    });\n\n    // Listen for dives deletions.\n    hermesApp.firebase.registerForDivesDeletion(diveId => this.onDiveDeleted(diveId));\n  }\n\n  /**\n   * Shows the feed showing all followed users.\n   */\n  showHomeFeed() {\n    // Clear previously displayed dives if any.\n    this.clear();\n\n    if (this.auth.currentUser) {\n      // Make sure the home feed is updated with followed users's new dives.\n      hermesApp.firebase.updateHomeFeeds().then(() => {\n        // Load initial batch of dives.\n        hermesApp.firebase.getHomeFeedDives().then(data => {\n          const diveIds = Object.keys(data.entries);\n          if (diveIds.length === 0) {\n            this.noDivesMessage.fadeIn();\n          }\n          // Listen for new dives.\n          const latestDiveId = diveIds[diveIds.length - 1];\n          hermesApp.firebase.subscribeToHomeFeed(\n              (diveId, diveValue) => {\n                this.addNewDive(diveId, diveValue);\n              }, latestDiveId);\n\n          // Adds fetched dives and next page button if necessary.\n          this.addDives(data.entries);\n          this.toggleNextPageButton(data.nextPage);\n        });\n\n        // Add new dives from followers live.\n        hermesApp.firebase.startHomeFeedLiveUpdaters();\n\n        // Listen for dives deletions.\n        hermesApp.firebase.registerForDivesDeletion(diveId => this.onDiveDeleted(diveId));\n      });\n    }\n  }\n\n  /**\n   * Triggered when a dive has been deleted.\n   */\n  onDiveDeleted(diveId) {\n    // Potentially remove dive from in-memory new dive list.\n    if (this.newDives[diveId]) {\n      delete this.newDives[diveId];\n      const nbNewDives = Object.keys(this.newDives).length;\n      this.newDivesButton.text(`Display ${nbNewDives} new dives`);\n      if (nbNewDives === 0) {\n        this.newDivesButton.hide();\n      }\n    }\n\n    // Potentially delete from the UI.\n    $(`.hm-dive-${diveId}`, this.pageFeed).remove();\n  }\n\n  /**\n   * Adds a new dive to display in the queue.\n   */\n  addNewDive(diveId, diveValue) {\n    this.newDives[diveId] = diveValue;\n    this.newDivesButton.text(`Display ${Object.keys(this.newDives).length} new dives`);\n    this.newDivesButton.show();\n  }\n\n  /**\n   * Clears the UI.\n   */\n  clear() {\n    // Delete the existing dives if any.\n    $('.hm-dive', this.feedImageContainer).remove();\n\n    // Hides the \"next page\" and \"new dives\" buttons.\n    this.nextPageButton.hide();\n    this.newDivesButton.hide();\n\n    // Remove any click listener on the next page button.\n    this.nextPageButton.unbind('click');\n\n    // Stops then infinite scrolling listeners.\n    hermesApp.MaterialUtils.stopOnEndScrolls();\n\n    // Clears the list of upcoming dives to display.\n    this.newDives = {};\n\n    // Displays the help message for empty feeds.\n    this.noDivesMessage.hide();\n\n    // Remove Firebase listeners.\n    hermesApp.firebase.cancelAllSubscriptions();\n\n    // Stops all timers if any.\n    this.dives.forEach(dive => dive.clear());\n    this.dives = [];\n  }\n};\n\nhermesApp.feed = new hermesApp.Feed();\n"]}