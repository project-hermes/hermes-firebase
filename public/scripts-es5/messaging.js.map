{"version":3,"sources":["../scripts/messaging.js"],"names":["window","hermesApp","Messaging","database","firebase","auth","storage","messaging","$","document","ready","enableNotificationsContainer","enableNotificationsCheckbox","enableNotificationsLabel","toast","change","onEnableNotificationsChange","onAuthStateChanged","trackNotificationsEnabledStatus","onTokenRefresh","saveToken","onMessage","payload","getToken","then","currentToken","saveNotificationToken","console","log","requestPermission","catch","error","err","notification","userId","click_action","split","data","message","body","actionHandler","page","actionText","timeout","MaterialSnackbar","showSnackbar","checked","prop","toggleNotificationEnabled","currentUser","registerToNotificationEnabledStatusUpdate","val","text","MaterialUtils","refreshSwitchState"],"mappings":"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","file":"messaging.js","sourcesContent":["'use strict';\n\nwindow.hermesApp = window.hermesApp || {};\n\n/**\n * Handles notifications.\n */\nhermesApp.Messaging = class {\n\n  /**\n   * Inititializes the notifications utility.\n   * @constructor\n   */\n  constructor() {\n    // Firebase SDK\n    this.database = firebase.database();\n    this.auth = firebase.auth();\n    this.storage = firebase.storage();\n    this.messaging = firebase.messaging();\n\n    $(document).ready(() => {\n      // DOM Elements\n      this.enableNotificationsContainer = $('.hm-notifications');\n      this.enableNotificationsCheckbox = $('#notifications');\n      this.enableNotificationsLabel = $('.mdl-switch__label', this.enableNotificationsContainer);\n\n      this.toast = $('.mdl-js-snackbar');\n\n      // Event bindings\n      this.enableNotificationsCheckbox.change(() => this.onEnableNotificationsChange());\n      this.auth.onAuthStateChanged(() => this.trackNotificationsEnabledStatus());\n      this.messaging.onTokenRefresh(() => this.saveToken());\n      this.messaging.onMessage(payload => this.onMessage(payload));\n    });\n  }\n\n  /**\n   * Saves the token to the database if available. If not request permissions.\n   */\n  saveToken() {\n    this.messaging.getToken().then(currentToken => {\n      if (currentToken) {\n        hermesApp.firebase.saveNotificationToken(currentToken).then(() => {\n          console.log('Notification Token saved to database');\n        });\n      } else {\n        this.requestPermission();\n      }\n    }).catch(err => {\n      console.error('Unable to get messaging token.', err);\n    });\n  }\n\n  /**\n   * Requests permission to send notifications on this browser.\n   */\n  requestPermission() {\n    console.log('Requesting permission...');\n    this.messaging.requestPermission().then(() => {\n      console.log('Notification permission granted.');\n      this.saveToken();\n    }).catch(err => {\n      console.error('Unable to get permission to notify.', err);\n    });\n  }\n\n  /**\n   * Called when the app is in focus.\n   */\n  onMessage(payload) {\n    console.log('Notifications received.', payload);\n\n    // If we get a notification while focus on the app\n    if (payload.notification) {\n      const userId = payload.notification.click_action.split('/user/')[1];\n\n      let data = {\n        message: payload.notification.body,\n        actionHandler: () => page(`/user/${userId}`),\n        actionText: 'Profile',\n        timeout: 10000\n      };\n      this.toast[0].MaterialSnackbar.showSnackbar(data);\n    }\n  }\n\n  /**\n   * Triggered when the user changes the \"Notifications Enabled\" checkbox.\n   */\n  onEnableNotificationsChange() {\n    const checked = this.enableNotificationsCheckbox.prop('checked');\n    this.enableNotificationsCheckbox.prop('disabled', true);\n\n    return hermesApp.firebase.toggleNotificationEnabled(checked);\n  }\n\n  /**\n   * Starts tracking the \"Notifications Enabled\" checkbox status.\n   */\n  trackNotificationsEnabledStatus() {\n    if (this.auth.currentUser) {\n      hermesApp.firebase.registerToNotificationEnabledStatusUpdate(data => {\n        this.enableNotificationsCheckbox.prop('checked', data.val() !== null);\n        this.enableNotificationsCheckbox.prop('disabled', false);\n        this.enableNotificationsLabel.text(data.val() ? 'Notifications Enabled' : 'Enable Notifications');\n        hermesApp.MaterialUtils.refreshSwitchState(this.enableNotificationsContainer);\n\n        if (data.val()) {\n          this.saveToken();\n        }\n      });\n    }\n  }\n};\n\nhermesApp.messaging = new hermesApp.Messaging();\n"]}